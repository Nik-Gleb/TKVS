/*
 * build.gradle
 * TKVS
 *
 * Copyright (C) 2021, Gleb Nikitenko (nikitosgleb@gmail.com)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.20"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
        options.compilerArgs << "-Xlint:unchecked"
        options.compilerArgs << "-Xdiags:verbose"
    }
}

project.ext.buildTools = project.properties['buildTools']
project.ext.targetSdk = project.buildTools.substring(0, 2)
project.ext.compileSdk = Integer.parseInt(project.targetSdk)
project.ext.minSdk = project.compileSdk - 4

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {

    buildToolsVersion project.buildTools
    compileSdkVersion project.compileSdk
    buildFeatures.viewBinding = true
    defaultConfig.applicationId project.properties['appId']
    defaultConfig.versionCode Integer.parseInt(project.properties['appVer'])
    defaultConfig.versionName "release"
    defaultConfig.targetSdkVersion project.targetSdk
    defaultConfig.minSdkVersion project.minSdk
    defaultConfig.multiDexEnabled false

    defaultConfig.testInstrumentationRunner "ru.nikitenkogleb.tkvs.MockJUnitRunner"

    dexOptions.javaMaxHeapSize "8G"
    dexOptions.maxProcessCount 8
    dexOptions.threadCount 8
    dexOptions.keepRuntimeAnnotatedClasses false
    dexOptions.dexInProcess = true
    dexOptions.jumboMode = false
    dexOptions.preDexLibraries true

    compileOptions.sourceCompatibility JavaVersion.VERSION_1_8
    compileOptions.targetCompatibility JavaVersion.VERSION_1_8
    compileOptions.coreLibraryDesugaringEnabled false
    compileOptions.incremental true
    kotlinOptions.jvmTarget = '1.8'
    lintOptions.checkReleaseBuilds true
    lintOptions.abortOnError true
    aaptOptions.additionalParameters '--enable-sparse-encoding'
    sourceSets.main.root = "."
    sourceSets.test.java.srcDirs        = ['tests/jvm']
    sourceSets.androidTest.java.srcDirs = ['tests/android']

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    signingConfigs {
        release {
            storeType "jks"
            storeFile file("keystore.jks")
            v1SigningEnabled true
            v2SigningEnabled true
            storePassword System.getProperty("store")
            keyAlias project.properties['appId']
            keyPassword System.getProperty("key")
        }
    }

    buildTypes {
        debug { debuggable true; shrinkResources false; minifyEnabled false }
        release {
            debuggable false; shrinkResources true; minifyEnabled true
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

// ==================================== Shrink optimizations ===========================================
task fix_aapt_rules(type: Delete) {
    delete file("$buildDir/intermediates/aapt_proguard_file/release/aapt_rules.txt")
    delete file("$buildDir/intermediates/proguard-files/proguard-android-optimize.txt-4.2.2")
    delete file("$buildDir/intermediates/proguard-files/proguard-android.txt-4.2.2")
    delete file("$buildDir/intermediates/proguard-files/proguard-defaults.txt-4.2.2")
}
afterEvaluate { mergeReleaseGeneratedProguardFiles.dependsOn project.tasks.getByName('fix_aapt_rules') }